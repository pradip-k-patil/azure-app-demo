name: Restart Azure App Service

on:
  workflow_dispatch:
    inputs:
      resourceId:
        description: 'Full Resource ID of the App Service (e.g., /subscriptions/xxxx/resourceGroups/xxxx/providers/Microsoft.Web/sites/xxxx)'
        required: true
        type: string

jobs:
  restart-app-service:
    runs-on: ubuntu-latest

    steps:
    - name: 'Login to Azure'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Parse Resource ID'
      id: parse
      run: |
        RESOURCE_ID="${{ github.event.inputs.resourceId }}"
        SUBSCRIPTION_ID=$(echo "$RESOURCE_ID" | cut -d'/' -f3)
        RESOURCE_GROUP=$(echo "$RESOURCE_ID" | cut -d'/' -f5)
        APP_NAME=$(echo "$RESOURCE_ID" | cut -d'/' -f9)

        echo "SUBSCRIPTION_ID=$SUBSCRIPTION_ID" >> $GITHUB_ENV
        echo "RESOURCE_GROUP=$RESOURCE_GROUP" >> $GITHUB_ENV
        echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV

    - name: Debug ENV values
      run: |
        echo "SUBSCRIPTION_ID=$SUBSCRIPTION_ID"
        echo "RESOURCE_GROUP=$RESOURCE_GROUP"
        echo "APP_NAME=$APP_NAME"

    - name: 'Set Azure Subscription'
      run: |
        echo "Using subscription: $SUBSCRIPTION_ID"
        az account set --subscription "$SUBSCRIPTION_ID"

    - name: Debug Variables
      run: |
        echo "APP_NAME: $APP_NAME"
        echo "RESOURCE_GROUP: $RESOURCE_GROUP"
        echo "SUBSCRIPTION_ID: $SUBSCRIPTION_ID"


    - name: 'Restart App Service'
      run: |
        echo "Restarting app: $APP_NAME"
        az webapp restart \
        --name "$APP_NAME" \
        --resource-group "$RESOURCE_GROUP"

    - name: 'Wait for App Service to be Running'
      run: |
        echo "Waiting for App Service to start..."
        for i in {1..20}; do
          STATUS=$(az webapp show \
            --name ${{ steps.parse.outputs.appName }} \
            --resource-group ${{ steps.parse.outputs.resourceGroup }} \
            --query "state" -o tsv)
          echo "Current status: $STATUS"
          if [[ "$STATUS" == "Running" ]]; then
            echo "✅ App Service is running."
            exit 0
          fi
          echo "⏳ Waiting 15 seconds..."
          sleep 15
        done
        echo "❌ Timed out waiting for App Service to start."
        exit 1
